{"version":3,"sources":["components/layouts/Header.js","Context.js","components/Contacts/Contact.js","components/Contacts/Contacts.js","components/layouts/TextInputGroup.js","components/Contacts/AddContact.js","components/Contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","className","to","Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","then","res","data","catch","err","console","log","value","this","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","e","name","email","phone","style","cursor","onClick","DeleteStyling","bind","marginRight","color","float","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","onSubmit","preventDefault","newContact","post","history","push","target","EditContact","match","params","put","About","NotFound","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2ddeca34.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    const { branding } = props;\r\n  return (\r\n      <nav className=\"navbar navbar-expand-lg bg-danger\">\r\n        <span className=\"navbar-brand mb-0 h1 text-white\">{branding}</span>\r\n        <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item text-white\">\r\n              <Link to='/' className=\"nav-link text-white\"><i className=\"fa fa-home\"></i>Home</Link>\r\n            </li>\r\n            <li className=\"nav-item text-white\">\r\n              <Link to='/about' className=\"nav-link text-white\"><i className=\"fa fa-question\"></i>About</Link>\r\n            </li>\r\n            <li className=\"nav-item text-white\">\r\n              <Link to='/contacts/add' className=\"nav-link text-white\"><i className=\"fa fa-plus\"></i>Add</Link>\r\n            </li>\r\n        </ul>\r\n      </nav>\r\n  );\r\n};\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n//Creating a Context\r\nconst Context = React.createContext();\r\n\r\n// Creating The Reducer\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      };\r\n    case \"EDIT_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: (action) => {\r\n      this.setState((state) => reducer(state, action));\r\n    },\r\n  };\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((res) => this.setState({ contacts: res.data }))\r\n      .catch((err) => console.log(err));\r\n  }\r\n  render() {\r\n    return (\r\n      //The Provider must be registered in the app.js file so that it can be given global access\r\n      // This props in Context.Provider is required\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\n// We will use Consumer to get the data in the Component\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport { Consumer } from \"../../Context\";\r\n\r\nclass Contact extends Component {\r\n  /*\r\n  Generating event in react the function has no access of the state to have the access there are threee ways \r\n  1.Constructor\r\n  2.using bind when calling method and passing this\r\n  3.using arrow functions\r\n  constructor(){\r\n    super();\r\n    this.state = {};\r\n    this.onShowClick = this.onShowClick.bind(this);\r\n  }\r\n  */\r\n  state = {\r\n    showContactInfo: true,\r\n  };\r\n  onDeleteClick = (id,dispatch) => {\r\n    try{\r\n      axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n      .then(res => dispatch({type:'DELETE_CONTACT' , payload:id}))\r\n      .catch(err => console.log(err));\r\n    }\r\n    catch(e){\r\n      dispatch({type:'DELETE_CONTACT' , payload:id})\r\n    }\r\n  };\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    return (\r\n      //To use the global state everything should be inside Consumer class\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mt-3\">\r\n              <h3>\r\n                {name}\r\n                <i\r\n                  className=\"fa fa-caret-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() => {\r\n                    this.setState((state) => ({\r\n                      showContactInfo: !state.showContactInfo,\r\n                    }));\r\n                  }}\r\n                ></i>\r\n                <i\r\n                  className=\"fa fa-trash-o\"\r\n                  style={DeleteStyling}\r\n                  onClick={this.onDeleteClick.bind(this,id,dispatch)}\r\n                >\r\n                </i>\r\n                <Link to={`/contacts/edit/${id}`} style={{marginRight:'1rem',cursor:'pointer',color:'black',float:'right'}}><i className=\"fa fa-pencil\"></i></Link>\r\n              </h3>\r\n              {this.state.showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">{email}</li>\r\n                  <li className=\"list-group-item\">{phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nconst DeleteStyling = {\r\n  cursor: \"pointer\",\r\n  color: \"red\",\r\n  float: \"right\",\r\n};\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\nexport default Contact;\r\n","import React, { Component } from 'react'\r\nimport Contact from './Contact';\r\n\r\nimport { Consumer } from '../../Context';\r\n\r\nclass Contacts extends Component {\r\n    render() {\r\n        return (\r\n            //Here We are accessing the global state to do that we require consumer so wrap everything in the Consumer class\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                    <React.Fragment>\r\n                        {contacts.map(contact => \r\n                            <Contact key={contact.id} contact={contact}\r\n                            />\r\n                        )}\r\n                    </React.Fragment>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport classnames  from 'classnames';\r\n\r\nconst TextInputGroup = (props) => {\r\n  const { label, value, name, type, placeholder, onChange, error} = props;\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        id={name}\r\n        className={classnames('form-control',{'is-invalid' : error})}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      <div className=\"invalid-feedback\">\r\n        {error}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes ={\r\n    name:PropTypes.string.isRequired,\r\n    label:PropTypes.string.isRequired,\r\n    value:PropTypes.string.isRequired,\r\n    type:PropTypes.string.isRequired,\r\n    placeholder:PropTypes.string.isRequired,\r\n    onChange:PropTypes.func.isRequired,\r\n    error:PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps={\r\n    type:'text'\r\n}\r\nexport default TextInputGroup;","import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport { Consumer } from \"../../Context\";\r\nimport TextInputGroup from \"../layouts/TextInputGroup\";\r\n// import { v4 as uuidv4 } from 'uuid';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors:{}\r\n  };\r\n  onSubmit = (dispatch,e) => {\r\n    e.preventDefault();\r\n    const { name,email,phone} = this.state;\r\n\r\n    //Checking Errors in input field\r\n    if(name === ''){\r\n      this.setState({errors : {\r\n        name:'Name is Required'\r\n      }});\r\n      return;\r\n    }\r\n    if(email === ''){\r\n      this.setState({errors : {\r\n        email:'Email is Required'\r\n      }});\r\n      return;\r\n    }\r\n    if(phone === ''){\r\n      this.setState({errors : {\r\n        phone:'Phone is Required'\r\n      }});\r\n      return;\r\n    }\r\n    //Creating a new Contact\r\n    const newContact ={\r\n        name,\r\n        email,\r\n        phone\r\n    }\r\n\r\n    axios.post('https://jsonplaceholder.typicode.com/users',newContact)\r\n    .then(res => dispatch({type:'ADD_CONTACT',payload:res.data}))\r\n    .catch(err => console.log(err))\r\n\r\n    //Clear State\r\n    this.setState({\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        errors:{}\r\n    });\r\n\r\n    //Redirecting\r\n    this.props.history.push('/');\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n    //Passing the function as a parameter in setState gives you an event is nullified error to get rid of it you should use e.persist() in tht beginning of function\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors} = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card my-2\">\r\n              <div className=\"card-header\">\r\n                <h1>Add Component</h1>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                  <TextInputGroup \r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name Please...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error ={errors.name}\r\n                  />\r\n                  <TextInputGroup \r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email Please...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error ={errors.email}\r\n                  />\r\n                  <TextInputGroup \r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone Please...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error = {errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport { Consumer } from \"../../Context\";\r\nimport TextInputGroup from \"../layouts/TextInputGroup\";\r\n// import { v4 as uuidv4 } from 'uuid';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors:{}\r\n  };\r\n  componentDidMount(){\r\n      const { id } = this.props.match.params;\r\n      axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n      .then(res => this.setState({\r\n        name:res.data.name,\r\n        email:res.data.email,\r\n        phone:res.data.phone\r\n    }))\r\n    .catch(err => console.log(err));\r\n  }\r\n\r\n    //To get Rid of the warning Can't perform a React state update on an unmounted component.\r\n    //   componentWillUnmount() {\r\n        //This._isMounted to be set true in componentwillmount and should be declared as false\r\n    //     this._isMounted = false;\r\n    //   }\r\n\r\n  onSubmit = (dispatch,e) => {\r\n    e.preventDefault();\r\n    const { name,email,phone} = this.state;\r\n    //Checking Errors in input field\r\n    if(name === ''){\r\n      this.setState({errors : {\r\n        name:'Name is Required'\r\n      }});\r\n      return;\r\n    }\r\n    if(email === ''){\r\n      this.setState({errors : {\r\n        email:'Email is Required'\r\n      }});\r\n      return;\r\n    }\r\n    if(phone === ''){\r\n      this.setState({errors : {\r\n        phone:'Phone is Required'\r\n      }});\r\n      return;\r\n    }\r\n    //Creating a new Contact\r\n    const newContact ={\r\n        name,\r\n        email,\r\n        phone\r\n    }\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,newContact)\r\n    .then(res => dispatch({type:'EDIT_CONTACT',payload:res.data}))\r\n    .catch(err => console.log(err));\r\n\r\n    //Clear State\r\n    this.setState({\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        errors:{}\r\n    });\r\n\r\n    //Redirecting\r\n    this.props.history.push('/');\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n    //Passing the function as a parameter in setState gives you an event is nullified error to get rid of it you should use e.persist() in tht beginning of function\r\n  };\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n        const { name, email, phone, errors} = this.state;\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card my-2\">\r\n              <div className=\"card-header\">\r\n                <h1>Edit Component</h1>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                  <TextInputGroup \r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name Please...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error ={errors.name}\r\n                  />\r\n                  <TextInputGroup \r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email Please...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error ={errors.email}\r\n                  />\r\n                  <TextInputGroup \r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone Please...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error = {errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <React.Fragment>\r\n        <h3 className=\"text-secondary mt-2\">About Page</h3>\r\n        <p className=\"lead\">This is version 1.0.0 of Contact Manager where you can manage your contacts</p>\r\n    </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <h3 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h3>\r\n      <p className=\"lead\">Sorry! the requested url can not be found</p>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Header from \"./components/layouts/Header\";\nimport Contacts from \"./components/Contacts/Contacts\";\nimport AddContact from \"./components/Contacts/AddContact\";\nimport EditContact from \"./components/Contacts/EditContact\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\n\nimport { Provider } from \"./Context\";\n\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    //We want the global state to be accessed through out the application so to do taht wrap everything in the Provided class\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"ContactManager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/contacts/add\" component={AddContact} />\n              <Route exact path=\"/contacts/edit/:id\" component={EditContact} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}